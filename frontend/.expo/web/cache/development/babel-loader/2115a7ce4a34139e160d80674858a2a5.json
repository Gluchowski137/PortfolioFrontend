{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DraggableView = function DraggableView(props) {\n  var nametitle = props.name;\n  var pan = useRef(new Animated.ValueXY()).current;\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }]),\n    onPanResponderRelease: function onPanResponderRelease() {\n      Animated.spring(pan, {\n        toValue: {\n          x: 0,\n          y: 0\n        },\n        useNativeDriver: true\n      }).start();\n    }\n  });\n  return _jsx(Animated.View, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n    style: [pan.getLayout(), styles.box],\n    children: _jsx(View, {\n      children: _jsx(Text, {\n        use: true\n      })\n    })\n  }));\n};\n\nvar styles = StyleSheet.create({\n  box: {\n    backgroundColor: '#69737f',\n    borderRadius: 15,\n    textAlign: \"center\",\n    justifyContent: 'center',\n    alignSelf: 'center',\n    padding: 10,\n    marginVertical: 5,\n    marginHorizontal: 5\n  }\n});\nexport default DraggableView;","map":{"version":3,"names":["React","useRef","DraggableView","props","nametitle","name","pan","Animated","ValueXY","current","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","dx","x","dy","y","onPanResponderRelease","spring","toValue","useNativeDriver","start","panHandlers","getLayout","styles","box","StyleSheet","backgroundColor","borderRadius","textAlign","justifyContent","alignSelf","padding","marginVertical","marginHorizontal"],"sources":["C:/Users/krzys/Desktop/Portfolio/PortfolioFrontend/frontend/components/DraggableComponent.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Animated, PanResponder, SafeAreaView, StyleSheet, View } from \"react-native\";\r\n\r\nconst DraggableView = (props:any) => {\r\n\r\n const nametitle = props.name\r\n\r\n  const pan = useRef(new Animated.ValueXY()).current;\r\n\r\n  const panResponder = PanResponder.create({\r\n    onStartShouldSetPanResponder: () => true,\r\n    onPanResponderMove: Animated.event([\r\n      null,\r\n      {\r\n        dx: pan.x, // x,y are Animated.Value\r\n        dy: pan.y,\r\n      },\r\n    ]\r\n    ),\r\n    onPanResponderRelease: () => {\r\n      Animated.spring(\r\n        pan, // Auto-multiplexed\r\n        {\r\n            toValue: { x: 0, y: 0 },\r\n            useNativeDriver: true\r\n        } // Back to zero\r\n      ).start();\r\n    },\r\n  });\r\n  return (\r\n      <Animated.View  {...panResponder.panHandlers} style={[pan.getLayout(), styles.box]}>\r\n        <View>\r\n          <Text use></Text>\r\n        </View>\r\n      </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  box: {\r\n    backgroundColor: '#69737f',\r\n    borderRadius: 15,\r\n    textAlign : \"center\",\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    marginHorizontal: 5,\r\n  },\r\n});\r\n\r\nexport default DraggableView;"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAe;EAEpC,IAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;EAEC,IAAMC,GAAG,GAAGL,MAAM,CAAC,IAAIM,QAAQ,CAACC,OAAb,EAAD,CAAN,CAA+BC,OAA3C;EAEA,IAAMC,YAAY,GAAGC,YAAY,CAACC,MAAb,CAAoB;IACvCC,4BAA4B,EAAE;MAAA,OAAM,IAAN;IAAA,CADS;IAEvCC,kBAAkB,EAAEP,QAAQ,CAACQ,KAAT,CAAe,CACjC,IADiC,EAEjC;MACEC,EAAE,EAAEV,GAAG,CAACW,CADV;MAEEC,EAAE,EAAEZ,GAAG,CAACa;IAFV,CAFiC,CAAf,CAFmB;IAUvCC,qBAAqB,EAAE,iCAAM;MAC3Bb,QAAQ,CAACc,MAAT,CACEf,GADF,EAEE;QACIgB,OAAO,EAAE;UAAEL,CAAC,EAAE,CAAL;UAAQE,CAAC,EAAE;QAAX,CADb;QAEII,eAAe,EAAE;MAFrB,CAFF,EAMEC,KANF;IAOD;EAlBsC,CAApB,CAArB;EAoBA,OACI,KAAC,QAAD,CAAU,IAAV,kCAAoBd,YAAY,CAACe,WAAjC;IAA8C,KAAK,EAAE,CAACnB,GAAG,CAACoB,SAAJ,EAAD,EAAkBC,MAAM,CAACC,GAAzB,CAArD;IAAA,UACE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAM,GAAG;MAAT;IADF;EADF,GADJ;AAOD,CAjCD;;AAmCA,IAAMD,MAAM,GAAGE,UAAU,CAACjB,MAAX,CAAkB;EAC/BgB,GAAG,EAAE;IACHE,eAAe,EAAE,SADd;IAEHC,YAAY,EAAE,EAFX;IAGHC,SAAS,EAAG,QAHT;IAIHC,cAAc,EAAE,QAJb;IAKHC,SAAS,EAAE,QALR;IAMHC,OAAO,EAAE,EANN;IAOHC,cAAc,EAAE,CAPb;IAQHC,gBAAgB,EAAE;EARf;AAD0B,CAAlB,CAAf;AAaA,eAAenC,aAAf"},"metadata":{},"sourceType":"module"}